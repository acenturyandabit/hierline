Made index.css and added it to index.html
---
A HTML file typically has the following parts:
<head>
this bit includes javascript; metadata e.g. reload rate (deprecated); title (the title of the webpage); and css links.
<body>
divs, p's, h1's, etc etc
---
<!DOCTYPE HTML> tells the computer that this file is a HTML file. It's usually fine to ignore this directive.
---
I'll use css for the 80% element and inline for the 10% element; ideally we'll put stuff in css because it separates it for clarity. When you feel comfortable with css then please move the 10% into css as well.
---
in css we refer to things in html by their ID or their class. see 80%.
---
//how come percentage doesn't work by itself
https://stackoverflow.com/questions/14545507/div-height-in-percentage
re: this example, in css if you want a style to apply to all elements of the same type e.g. all divs, just div{stuff} is ok
and for just everything, use *{stuff}

commas allow multiple criteria to have the same css e.g. html, body{}
if you just use space it works like this:
"p a{}" matches <p><a>this</a></p> but not <p>this</p> or <a>this</a>
".hello .bye{}" matches <div class="hello"><p class="bye">this</p></div>

CSS styles overwrite based on specificity: i.e.
lower priority
*{width:10%}
div{width:20%}
.class{width:30%}
#id{width:40%}
high priority
(not sure where inline is but it's highest or second highest priority)
---
added overflow:hidden css so that the vertical scroll doesn't show up
---
10% looks a bit small whelp
---
I'm adding jquery.
Jquery is a javascript library. The term library here is used very loosely; typically in other desktop languages libraries have precompiled code, but in javascript since everything is 'interpreted' instead of compiled, you can see the code in javascript libraries.

Instead of compiling, javascript can be minified or obfuscated. 
The purpose of minification is to reduce the size of the code at the cost of readability. This is done because if i'm using 7 separate libraries for my website i don't want my end user to download 100mb of code. minification usually makes your variable names single letters e.g. count->c etc; and deletes newlines. Take a look at jquery.min(ified).js.

Obfuscation on the other hand deliberately wrecks code so that it's functional but no longer readable in any meaningful way. It's used more as a method of intellectual property and end user hacking prevention; extending on minification by using techniques such as executing strings. There are professional online obfuscation services for javascript; i'm glad someone found a way to make money by screwing up other people's code. Good for them :3

Anyways so
Jquery is a library that turns this:
var p = document.getElementByID("stuff")
into this equivalent statement:
var p = $("#stuff")[0]
Saving you time. Jquery's motto is "write less, do more."
And it has a few other useful things too.
To include it, i pop a copy of jquery into my folder and then <script src="jquery.min.js"></script> in my html.
---
yay excessive documentation - see logic.js
//the reason why programmers work alone - it's very time consuming to make your code to a standard which others can understand.
//todo: invent neural interface 
---
http://graphics.cs.wisc.edu/WP/cs559-sp2015/2015/02/09/svg-4-groups-transforms-re-use-and-hierarchies/
---
Getting rid of all the sample classes n stuff. You'll see them around enough anyways.
---
rearranged blocks div outside of hierarchy div
---
an interesting speed test:
https://jsperf.com/jquery-element-creationyay/19
---
http://svgtutorial.com/manipulating-svg-with-javascript/
---